// This is styling for the stepper container shadow DOM
@use '@nextrap/style-reset';

:host {
  /* Colors */
  --nte-stepper-progress-bg-color: rgba(var(--nt-primary-rgb), 0.05);
  --nte-stepper-progress-bar-color: var(--nt-primary, #0d6efd);
  --nte-stepper-seperator-color: var(--nt-soft-dark, #6c757d);
  --nte-stepper-seperator-color-completed: var(--nt-primary, #0d6efd);
  /* Sizes, Spacing */
  --nte-stepper-spacing: 1rem;
  --nte-stepper-circle-size: 36px;
  --nte-stepper-seperator-width: 2px;
  --nte-stepper-seperator-height: 3rem;
  --nte-stepper-padding-y: 0.75rem;

  /* CSS vars are cascade-inherited to nte-step components */
  --nte-stepper-padding-x: 1rem;
  --nte-stepper-border-radius: 0.5rem;
  --nte-stepper-min-width: 200px;

  /* CSS for slotted nte-step element */
  --slotted-nte-step-background-color-hover: rgba(var(--nt-black-rgb), 0.03);
}

.nte-stepper-wrapper {
  display: flex;
  position: relative;

  ::slotted(nte-step) {
    --nte-step-background-color-hover: var(--slotted-nte-step-background-color-hover);
    /* No hover styling here - moved to nte-step component */
  }

  &.nte-stepper-mode-horizontal {
    flex-direction: row;

    ::slotted(nte-step) {
      flex-direction: column;
      justify-items: flex-start;
      align-items: flex-start;
      gap: 2rem;
    }

    .nte-stepper-progress {
      display: inline-block;
      position: absolute;
      width: 100%;
      top: calc(var(--nte-stepper-padding-y) + var(--nte-stepper-circle-size) + 0.5rem);

      nte-progress::part(progress) {
        --nte-progress-bg-color: var(--nte-stepper-progress-bg-color);
      }

      nte-progress::part(progress-bar) {
        background-color: var(--nte-stepper-progress-bar-color);
      }
    }
  }

  &.nte-stepper-mode-vertical {
    flex-direction: column;
    position: relative;

    ::slotted(nte-step) {
      flex-flow: row nowrap;
      margin: 1rem 0;
      /* Remove hover styling here - moved to nte-step component */
    }

    .nte-stepper-separator {
      position: absolute;
      left: calc(
        var(--nte-stepper-padding-x) + var(--nte-stepper-circle-size) / 2 - var(--nte-stepper-seperator-width) / 2
      );
      top: var(--nte-stepper-separator-top, 25%);
      height: var(--nte-stepper-seperator-height);
      border-left: var(--nte-stepper-seperator-width) dashed var(--nte-stepper-seperator-color);
      width: var(--nte-stepper-seperator-width);
      margin: 0;
      z-index: 0;
      transform: translateY(-50%);

      &.completed {
        border-left: var(--nte-stepper-seperator-width) solid var(--nte-stepper-seperator-color-completed);
      }
    }
  }

  &.nte-stepper-mode-circular {
    flex-direction: row;
  }
}

/* Styles moved to nte-step component */

/* Horizontal separators between steps (added dynamically in render method) */
.nte-stepper-separator--horizontal {
  margin: 0 0.5rem;
  height: 1px;
  flex: 1;
  border-top: var(--nte-stepper-seperator-width) dashed var(--nte-stepper-seperator-color);
}
