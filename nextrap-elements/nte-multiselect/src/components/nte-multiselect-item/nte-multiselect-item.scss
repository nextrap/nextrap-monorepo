:host {
  display: block;
  box-sizing: border-box;
  --card-background: #ffffff;
  --card-background-checked: #f0f7ff;
  --card-border-color: #e0e0e0;
  --card-border-color-checked: #1976d2;
  --card-border-color-focused: #2196f3;
  --card-border-width: 2px;
  --card-border-radius: 8px;
  --card-padding: 16px;
  --card-transition: all 0.2s ease;
  --control-size: 24px;
  --text-color: #333333;
  --text-color-disabled: #999999;
  --value-color: #1976d2;
  --description-color: #666666;
}

* {
  box-sizing: border-box;
}

.card {
  position: relative;
  background-color: var(--card-background);
  border: var(--card-border-width) solid var(--card-border-color);
  border-radius: var(--card-border-radius);
  padding: var(--card-padding);
  cursor: pointer;
  transition: var(--card-transition);
  min-height: 80px;
}

.card:hover:not(.disabled) {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  transform: translateY(-1px);
}

.card:focus-within {
  border-color: var(--card-border-color-focused);
  outline: none;
}

.card.checked {
  background-color: var(--card-background-checked);
  border-color: var(--card-border-color-checked);
}

.card.disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.card-content {
  display: flex;
  align-items: flex-start;
  gap: 12px;
  width: 100%;
}

.leading-slot {
  flex-shrink: 0;
  font-size: 24px;
  line-height: 1;
}

.main-content {
  flex: 1;
  min-width: 0;
}

.title-row {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  gap: 12px;
  margin-bottom: 4px;
}

.title {
  font-size: 16px;
  font-weight: 600;
  color: var(--text-color);
  line-height: 1.3;
  margin: 0;
}

.card.disabled .title {
  color: var(--text-color-disabled);
}

.value {
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--value-color);
  flex-shrink: 0;
}

.card.disabled .value {
  color: var(--text-color-disabled);
}

.description {
  font-size: 14px;
  color: var(--description-color);
  line-height: 1.4;
  margin: 0;
}

.card.disabled .description {
  color: var(--text-color-disabled);
}

// Native input - always hidden but functional for accessibility
.native-input {
  position: absolute;
  opacity: 0;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  clip: rect(0, 0, 0, 0);
  overflow: hidden;
  white-space: nowrap;
}

.native-input.hidden {
  position: absolute;
  left: -9999px;
  opacity: 0;
  width: 1px;
  height: 1px;
}

// Control container
.control {
  position: absolute;
  width: var(--control-size);
  height: var(--control-size);
}

// Custom visual controls
.control-visual {
  position: absolute;
  width: var(--control-size);
  height: var(--control-size);
  border: 2px solid var(--card-border-color);
  background: #ffffff;
  transition: var(--card-transition);
  cursor: pointer;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.control-visual:hover {
  border-color: var(--card-border-color-focused);
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
}

// Radio button styling
.control-visual.radio {
  border-radius: 50%;
}

// Checkbox styling
.control-visual.checkbox {
  border-radius: 4px;
}

// Checked states
.card.checked .control-visual {
  border-color: var(--card-border-color-checked);
  background-color: var(--card-border-color-checked);
  box-shadow: 0 2px 6px rgba(25, 118, 210, 0.3);
}

// Check marks and indicators
.control-visual::after {
  content: '';
  position: absolute;
  opacity: 0;
  transition:
    opacity 0.2s ease,
    transform 0.2s ease;
}

.card.checked .control-visual::after {
  opacity: 1;
}

// Radio button dot
.control-visual.radio::after {
  top: 50%;
  left: 50%;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background: white;
  transform: translate(-50%, -50%) scale(0.8);
}

.card.checked .control-visual.radio::after {
  transform: translate(-50%, -50%) scale(1);
}

// Checkbox checkmark
.control-visual.checkbox::after {
  top: 1px;
  left: calc(var(--control-size) / 4);
  width: calc(var(--control-size) / 3);
  height: calc(var(--control-size) / 2);
  border: solid white;
  border-width: 0 calc(var(--control-size) / 9) calc(var(--control-size) / 9) 0;
  transform: rotate(45deg) scale(0.8);
}

.card.checked .control-visual.checkbox::after {
  transform: rotate(45deg) scale(1);
}

// Disabled states
.card.disabled .control-visual {
  opacity: 0.5;
  cursor: not-allowed;
  border-color: var(--text-color-disabled);
  background: #f5f5f5;
}

.card.disabled .control-visual:hover {
  border-color: var(--text-color-disabled);
  box-shadow: none;
}

// Control positioning variants
:host([control-position='top-left']) .control {
  top: var(--card-padding);
  left: var(--card-padding);
}

:host([control-position='top-right']) .control {
  top: var(--card-padding);
  right: var(--card-padding);
}

:host([control-position='bottom-left']) .control {
  bottom: var(--card-padding);
  left: var(--card-padding);
}

:host([control-position='bottom-right']) .control {
  bottom: var(--card-padding);
  right: var(--card-padding);
}

// Default position is bottom-right
.control {
  bottom: var(--card-padding);
  right: var(--card-padding);
}

// Hide controls when show-controls is false
:host([show-controls='false']) .control {
  display: none;
}

// Focus states for accessibility
.native-input:focus + .control-visual,
.native-input:focus-visible + .control-visual {
  outline: 2px solid var(--card-border-color-focused);
  outline-offset: 2px;
}

// Accessibility improvements
.card:focus-visible {
  outline: 2px solid var(--card-border-color-focused);
  outline-offset: 2px;
}

@media (prefers-reduced-motion: reduce) {
  .card,
  .control-visual,
  .control-visual::after {
    transition: none;
  }

  .card:hover:not(.disabled) {
    transform: none;
  }
}
