

// Border base
.border {
  --border-width: var(--nt-border-width, 1px);
  --border-style: solid;
  --border-color: var(--nt-primary);
  border: var(--border-width) var(--border-style) var(--border-color) !important
}

// Sides
.border-top {
  border-top: var(--nt-border-width) solid
  rgb(from var(--border-color, var(--nt-dark)) r g b / var(--border-opacity, 1)) !important;
}
.border-end {
  border-inline-end: var(--nt-border-width) solid
  rgb(from var(--border-color, var(--nt-dark)) r g b / var(--border-opacity, 1)) !important;
}
.border-bottom {
  border-bottom: var(--nt-border-width) solid
  rgb(from var(--border-color, var(--nt-dark)) r g b / var(--border-opacity, 1)) !important;
}
.border-start {
  border-inline-start: var(--nt-border-width) solid
  rgb(from var(--border-color, var(--nt-dark)) r g b / var(--border-opacity, 1)) !important;
}

// Remove
.border-0 { border: 0 !important; }
.border-top-0 { border-top: 0 !important; }
.border-end-0 { border-inline-end: 0 !important; }
.border-bottom-0 { border-bottom: 0 !important; }
.border-start-0 { border-inline-start: 0 !important; }

// Widths
$border-widths: (
  1: 1px,
  2: 2px,
  3: 3px,
  4: 4px,
  5: 5px
);

@each $n, $w in $border-widths {
  .border-#{$n} {
    border-width: #{$w} !important;
  }
}

// Colors (incl. accent)
$border-colors: (
  primary: var(--nt-primary),
  secondary: var(--nt-secondary),
  accent: var(--nt-accent),
  success: var(--nt-success),
  info: var(--nt-info),
  warning: var(--nt-warning),
  danger: var(--nt-danger),
  light: var(--nt-light),
  dark: var(--nt-dark),
  white: var(--nt-white),
  black: var(--nt-black)
);

@each $name, $val in $border-colors {
  .border-#{$name} {
    --border-color: rgb(from #{$val} r g b / var(--border-opacity, 1)) !important;
  }
}

// Opacity
$border-opacities: (10: .1, 25: .25, 50: .5, 75: .75, 100: 1);

@each $step, $alpha in $border-opacities {
  .border-opacity-#{$step} {
    --border-opacity: #{$alpha};
  }
}

// ====================================
// Border Radius Utilities
// Default based on --nt-border-radius
// ====================================
$radius-map: (
  null: 1, // default (multiplier 1x)
  0: 0,
  1: .25,
  2: .5,
  3: 1,
  4: 1.5,
  5: 3
);

@each $suffix, $mult in $radius-map {
  $class: if($suffix == null, "", "-#{$suffix}");
  .rounded#{$class} {
    border-radius: calc(var(--nt-border-radius) * #{$mult}) !important;
  }
}

// Sides
@each $suffix, $mult in $radius-map {
  $class: if($suffix == null, "", "-#{$suffix}");
  .rounded-top#{$class} {
    border-top-left-radius: calc(var(--nt-border-radius) * #{$mult}) !important;
    border-top-right-radius: calc(var(--nt-border-radius) * #{$mult}) !important;
  }
  .rounded-end#{$class} {
    border-top-right-radius: calc(var(--nt-border-radius) * #{$mult}) !important;
    border-bottom-right-radius: calc(var(--nt-border-radius) * #{$mult}) !important;
  }
  .rounded-bottom#{$class} {
    border-bottom-right-radius: calc(var(--nt-border-radius) * #{$mult}) !important;
    border-bottom-left-radius: calc(var(--nt-border-radius) * #{$mult}) !important;
  }
  .rounded-start#{$class} {
    border-top-left-radius: calc(var(--nt-border-radius) * #{$mult}) !important;
    border-bottom-left-radius: calc(var(--nt-border-radius) * #{$mult}) !important;
  }
  .rounded-circle#{$class} {
    border-radius: 50% !important;
  }
  .rounded-pill#{$class} {
    border-radius: 50rem !important;
  }
}