@use '@nextrap/style-base' as *;

// make Array of all BS colors
$colors: ('primary', 'accent', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark');

.btn {
  // Configuration variables

  // Variables modified by the color classes
  --btn-txt-rgb: var(--nt-text-on-primary);
  --btn-bg-rgb: var(--nt-primary-rgb);
  display: inline-block;
  padding: 0.5rem 1rem;
  background-color: rgba(var(--btn-bg-rgb), 0.8);
  color: var(--btn-txt-rgb);
  border-radius: var(--nt-border-radius);
  border: 1px solid var(--btn-bg-rgb);
  text-decoration: none;

  cursor: pointer;
  transition:
    background-color 0.3s ease,
    color 0.3s ease;

  &:hover {
    background-color: rgba(var(--btn-bg-rgb), 1);
    color: white;
  }

  &.btn-link {
    background-color: transparent;
    color: rgba(var(--nt-link-rgb), 0.8);
    border: none;

    text-decoration: var(--nt-text-decoration-link);
    &:hover {
      background-color: transparent;
      color: rgba(var(--nt-link-rgb), 1);
    }
  }

  &.disabled,
  &[disabled] {
    background-color: rgba(var(--btn-bg-rgb), 0.5);
    color: rgba(var(--btn-txt-rgb), 0.9);
    cursor: not-allowed;
    pointer-events: none;
  }

  &.btn-lg {
    padding: 0.75rem 1.5rem;
    font-size: 1.25rem;
  }

  &.btn-sm {
    padding: 0.25rem 0.5rem;
    font-size: 0.75rem;
  }

  // Dropdown button styles
  &.dropdown-toggle {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding-right: 2rem; // Space for the dropdown icon
    background-image: none; // Remove any background image
    background-color: rgba(var(--btn-bg-rgb), 0.8);
    color: var(--btn-txt-rgb);

    &::after {
      content: '';
      position: absolute;
      right: 0.5rem;
      top: 50%;
      transform: translateY(-50%);
      border-left: 0.25rem solid transparent;
      border-right: 0.25rem solid transparent;
      border-top: 0.25rem solid var(--btn-txt-rgb);
    }
  }

  &:active,
  &:focus + .dropdown-menu {
    display: block; // Show dropdown on active state
    opacity: 1; // Make dropdown visible
  }

  // Loop through colors and create classes
  @each $color in $colors {
    &.btn-#{$color} {
      --btn-bg-rgb: var(--nt-#{$color}-rgb);
      --btn-txt-rgb: var(--nt-text-on-#{$color});
      border-color: rgba(var(--nt-#{$color}-rgb), 1);

      &:hover {
        --btn-bg-rgb: var(--nt-#{$color}-rgb);
      }
    }
    &.btn-outline-#{$color} {
      background-color: transparent;
      --btn-txt-rgb: var(--nt-text);
      border: 1px solid rgba(var(--nt-#{$color}-rgb), 0.9);

      &:hover {
        background-color: rgba(var(--nt-#{$color}-rgb), 1);
        --btn-bg-rgb: var(--nt-#{$color}-rgb);
        --btn-txt-rgb: var(--nt-text-on-#{$color});
      }
    }
  }
}
