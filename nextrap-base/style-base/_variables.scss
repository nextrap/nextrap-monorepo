// By default calculate light colors
@use 'sass:color';


$lighten-factor: 40% !default;

$primary: #007bff !default;
$primary-subtle: color.adjust($primary, $lightness: $lighten-factor) !default;
$primary-emphasis: color.adjust($primary, $lightness: -$lighten-factor / 2) !default;

$accent: #6610f2 !default;
$accent-subtle: color.adjust($accent, $lightness: $lighten-factor) !default;
$accent-emphasis: color.adjust($accent, $lightness: -$lighten-factor / 2) !default;

$secondary: #6c757d !default;
$secondary-subtle: color.adjust($secondary, $lightness: $lighten-factor) !default;
$secondary-emphasis: color.adjust($secondary, $lightness: -$lighten-factor / 2) !default;

$success: #28a745 !default;
$success-subtle: color.adjust($success, $lightness: $lighten-factor) !default;
$success-emphasis: color.adjust($success, $lightness: -$lighten-factor / 2) !default;

$info: #17a2b8 !default;
$info-subtle: color.adjust($info, $lightness: $lighten-factor) !default;
$info-emphasis: color.adjust($info, $lightness: -$lighten-factor / 2) !default;

$warning: #ffc107 !default;
$warning-subtle: color.adjust($warning, $lightness: $lighten-factor) !default;
$warning-emphasis: color.adjust($warning, $lightness: -$lighten-factor / 2) !default;

$danger: #dc3545 !default;
$danger-subtle: color.adjust($danger, $lightness: $lighten-factor) !default;
$danger-emphasis: color.adjust($danger, $lightness: -$lighten-factor / 2) !default;

$light: #f8f9fa !default;
$light-subtle: color.adjust($light, $lightness: $lighten-factor) !default;
$light-emphasis: color.adjust($light, $lightness: -$lighten-factor / 2) !default;

$dark: #343a40 !default;
$dark-subtle: color.adjust($dark, $lightness: $lighten-factor) !default;
$dark-emphasis: color.adjust($dark, $lightness: -$lighten-factor / 2) !default;

$white: #fff !default;
$black: #000 !default;

$body: $white !default;
$body-secondary: $light !default;
$body-tertiary: $light-subtle !default;




$soft-primary: color.adjust($primary, $lightness: $lighten-factor) !default;
$soft-secondary: color.adjust($secondary, $lightness: $lighten-factor) !default;
$soft-accent: color.adjust($accent, $lightness: $lighten-factor) !default;
$soft-success: color.adjust($success, $lightness: $lighten-factor) !default;
$soft-info: color.adjust($info, $lightness: $lighten-factor) !default;
$soft-warning: color.adjust($warning, $lightness: $lighten-factor) !default;
$soft-danger: color.adjust($danger, $lightness: $lighten-factor) !default;
$soft-light: color.adjust($light, $lightness: $lighten-factor) !default;
$soft-dark: color.adjust($dark, $lightness: $lighten-factor) !default;

// ======== FONTS ======== //

$gap: 1.25rem !default; // Base gap for layout (use this for padding, margins, etc.)
$space: 1rem !default; // Base spacing unit
$content-space: 10rem !default; // Base constant spacing unit

$font-family-base: sans-serif !default;
$font-size-base: 1rem !default; // Base font size
$line-height-base: 1.5 !default; // Base line height

$font-family-header: $font-family-base !default;
$font-size-header: 1rem !default; // Header font size
$line-height-header: 1.2 !default; // Header line height

$text: $black !default; // Base text color
$text-on-soft-colors: $text !default; // Default text color on soft colors
$header: $black !default; // Header text color

$text-decoration-link: underline !default;
$link-color: $primary !default;
$link-on-dark: $white !default;

// Used for generating --space-1, --space-2, etc. CSS variables and --content-space-1, --content-space-2, etc.
$spaceMap: (
  '1': 0.25,
  '2': 0.5,
  '3': 1,
  '4': 1.5,
  '5': 3,
) !default; // Spacing map for utility classes

$font-size-small: 0.875rem !default; // Font size in <small> tags or .small class

$fontSizeMap: (
  '1': 1.5,
  '2': 1.25,
  '3': 1,
  '4': 0.9,
  '5': 0.85,
  '6': 0.75,
) !default; // Font size map for utility classes

$headerFontSizeMap: (
  '1': 2.5,
  '2': 2,
  '3': 1.75,
  '4': 1.5,
  '5': 1.25,
  '6': 1,
) !default; // Font size map for headers

$enableRcs: false !default; // Use RCS (Responsive CSS) for responsive design
$enableFontConfig: false !default; // Enable front-end configuration
$enableScrollOffset: false !default; // Enable scroll offset for fixed elements
