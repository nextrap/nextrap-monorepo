@use './../variables' as *;
@use 'sass:math';
@use 'sass:color';

@function luminance($color) {
  $r: red($color) / 255;
  $g: green($color) / 255;
  $b: blue($color) / 255;

  $r: if($r < 0.03928, $r / 12.92, pow((($r + 0.055) / 1.055), 2.4));
  $g: if($g < 0.03928, $g / 12.92, pow((($g + 0.055) / 1.055), 2.4));
  $b: if($b < 0.03928, $b / 12.92, pow((($b + 0.055) / 1.055), 2.4));

  @return $r * 0.2126 + $g * 0.7152 + $b * 0.0722;
}

@function contrast($color1, $color2) {
  $l1: luminance($color1) + 0.05;
  $l2: luminance($color2) + 0.05;
  @return if($l1 > $l2, math.div($l1, $l2), math.div($l2, $l1));
}

$text: $black !default;
$text-on-primary: $white !default;
// Calculate if contrast is needed
$text-on-primary: if(contrast($primary, $text) > 4.5, $text, $white) !default;
$text-on-secondary: if(contrast($secondary, $text) > 4.5, $text, $white) !default;

$text-on-accent: if(contrast($accent, $text) > 4.5, $text, $white) !default;
$text-on-success: if(contrast($success, $text) > 4.5, $text, $white) !default;
$text-on-info: if(contrast($info, $text) > 4.5, $text, $white) !default;
$text-on-warning: if(contrast($warning, $text) > 4.5, $text, $white) !default;
$text-on-danger: if(contrast($danger, $text) > 4.5, $text, $white) !default;
$text-on-light: if(contrast($light, $text) > 4.5, $text, $black) !default;
$text-on-dark: if(contrast($dark, $text) > 4.5, $text, $white) !default;
$text-on-white: if(contrast($white, $text) > 4.5, $text, $black) !default;
$text-on-black: if(contrast($black, $text) > 4.5, $text, $white) !default;
$background: $white !default;

// Register the css variables

:root {
  --nt-primary: #{$primary};
  --nt-secondary: #{$secondary};
  --nt-accent: #{$accent};
  --nt-success: #{$success};
  --nt-info: #{$info};
  --nt-warning: #{$warning};
  --nt-danger: #{$danger};
  --nt-light: #{$light};
  --nt-dark: #{$dark};
  --nt-white: #{$white};
  --nt-black: #{$black};

  /** REMOVED - USE CSS Colors 5 Syntax instead rgb(from var(--nt-primary) r g b)
  --nt-primary-rgb: #{hex2rgb($primary)};
  --nt-secondary-rgb: #{hex2rgb($secondary)};
  --nt-accent-rgb: #{hex2rgb($accent)};
  --nt-success-rgb: #{hex2rgb($success)};
  --nt-info-rgb: #{hex2rgb($info)};
  --nt-warning-rgb: #{hex2rgb($warning)};
  --nt-danger-rgb: #{hex2rgb($danger)};
  --nt-light-rgb: #{hex2rgb($light)};
  --nt-dark-rgb: #{hex2rgb($dark)};
  --nt-white-rgb: #{hex2rgb($white)};
  --nt-black-rgb: #{hex2rgb($black)};
  */

  // Soft colors
  --nt-soft-primary: #{$soft-primary};
  --nt-soft-secondary: #{$soft-secondary};
  --nt-soft-accent: #{$soft-accent};
  --nt-soft-success: #{$soft-success};
  --nt-soft-info: #{$soft-info};
  --nt-soft-warning: #{$soft-warning};
  --nt-soft-danger: #{$soft-danger};
  --nt-soft-light: #{$soft-light};
  --nt-soft-dark: #{$soft-dark};
  --nt-text-on-soft-colors: #{$text-on-soft-colors}; // Default: always text color (black)

  // Text colors
  --nt-text: #{$text};
  //--nt-text-rgb: #{hex2rgb($text)};

  --nt-text-on-primary: #{$text-on-primary};
  --nt-text-on-secondary: #{$text-on-secondary};
  --nt-text-on-accent: #{$text-on-accent};
  --nt-text-on-success: #{$text-on-success};
  --nt-text-on-info: #{$text-on-info};
  --nt-text-on-warning: #{$text-on-warning};
  --nt-text-on-danger: #{$text-on-danger};
  --nt-text-on-light: #{$text-on-light};
  --nt-text-on-dark: #{$text-on-dark};
  --nt-text-on-white: #{$text-on-white};
  --nt-text-on-black: #{$text-on-black};
  --nt-background: #{$background};

  --nt-link: #{$link-color};
  --nt-link-on-dark: #{$link-on-dark};
  --nt-text-decoration-link: #{$text-decoration_link};

  --nt-font-family-base: #{$font-family-base};
  --nt-font-family-header: #{$font-family-header};
  --nt-font-size-base: #{$font-size-base};
  --nt-font-size-header: #{$font-size-header};
  --nt-header: #{header};

  --nt-font-size-small: #{$font-size-small};

  // Spacing
  --nt-gap: #{$gap};

  --nt-border-radius: 0.25rem;
  --nt-border-width: 1px;

  --nt-space: #{$space};
  // Create --nt-space-1-5 variables (Multiplier from bootstrap)
  @each $i, $val in $spaceMap {
    --nt-space-#{$i}: calc(var(--nt-space) * #{$val});
  }

  --nt-content-space: #{$content-space};
  // Create --nt-content-space-1-5 variables
  @each $i, $val in $spaceMap {
    --nt-content-space-#{$i}: calc(var(--nt-content-space) * #{$val});
  }

  // =============== FONT SIZES =============== //
  // Font size
  @each $i, $val in $fontSizeMap {
    --nt-fs-#{$i}: calc(var(--nt-font-size-base) * #{$val});
  }

  // header font size
  @each $i, $val in $headerFontSizeMap {
    --nt-fs-h#{$i}: calc(var(--nt-font-size-header) * #{$val});
  }

  // Display font size
}
